name: CI/CD Function App
on:
  push:
    paths:
      - 'Services/Gavinhow.SpotifyStatistics.ImportFunction/**'
      - 'infrastructure/**/import/**'
      - '.github/workflows/function_app.yml'
      - '.github/workflows/terraform-deploy.yml'
    branches:
      - main
      - feature/deploy_function_app

  workflow_dispatch:

jobs:
  build:
    name: Build Function App
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'
      - run: dotnet build ./Services/Gavinhow.SpotifyStatistics.ImportFunction/Gavinhow.SpotifyStatistics.ImportFunction.csproj --configuration Release --output ./publish_output
      - uses: actions/upload-artifact@v3
        with:
          name: import_function_app
          path: ./publish_output/
          if-no-files-found: error
      - uses: actions/upload-artifact@v3
        with:
          name: terraform
          path: './infrastructure/'
          if-no-files-found: error

  deploy_terraform_dev:
    needs: build
    uses: ./.github/workflows/terraform-deploy.yml
    with:
      environment: develop
      tf_working_dir: './infrastructure/live/dev/import'
    secrets: inherit


  deploy_dev:
    name: Deploy Function App to develop
    needs: [ build, deploy_terraform_dev ]
    runs-on: ubuntu-latest
    environment: develop
    env:
      function_app_name: ${{ fromJson(needs.deploy_terraform_dev.outputs.tf_actions_output).import_function_app_name.value }}
      function_app_resource_group: ${{ fromJson(needs.deploy_terraform_dev.outputs.tf_actions_output).import_function_app_resource_group_name.value }}
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: import_function_app
          path: ./function_app

      - uses: Azure/login@v1
        with:
          creds: '{"clientId":"${{ secrets.ARM_CLIENT_ID }}","clientSecret":"${{ secrets.ARM_CLIENT_SECRET }}","subscriptionId":"${{ secrets.ARM_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.ARM_TENANT_ID }}"}'
      - name: Get Publish Profile
        run: |
          echo "PUBLISH_PROFILE=$(az webapp deployment list-publishing-profiles -g '${{ env.function_app_resource_group }}' -n '${{ env.function_app_name }}' --xml)" >> $GITHUB_OUTPUT
        id: getPublishProfile

      - name: 'Deploy Function App to Azure'
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: ${{ env.function_app_name }}
          package: './function_app'
          publish-profile: ${{ steps.getPublishProfile.outputs.PUBLISH_PROFILE }}
