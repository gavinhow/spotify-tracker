name: CI/CD Function App
on:
  push:
    branches:
      - main
      - feature/deploy_function_app
  workflow_dispatch:

jobs:
  build:
    name: Build Function App
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'
      - run: dotnet build ./Services/Gavinhow.SpotifyStatistics.ImportFunction/Gavinhow.SpotifyStatistics.ImportFunction.csproj --configuration Release --output ./publish_output
      - uses: actions/upload-artifact@v3
        with:
          name: import_function_app
          path: ./publish_output/
          if-no-files-found: error
      - uses: actions/upload-artifact@v3
        with:
          name: terraform
          path: './infrastructure/'
          if-no-files-found: error
  deploy_terraform_dev:
    name: Deploy Terraform to develop
    needs: build
    runs-on: ubuntu-latest
    environment: develop
    env:
      tf_version: 'latest'
      tg_version: 'latest'
      TF_VAR_postgres_connection: ${{ secrets.POSTGRES_CONNECTION }}
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      TF_INPUT: false
      ARM_USE_CLI: false
      TERRAGRUNT_AUTO_INIT: false
      TERRAGRUNT_LOG_LEVEL: error
    outputs:
      function_app_name: ${{ fromJson(steps.output.outputs.tf_actions_output).import_function_app_name.value }}
      function_app_resource_group: ${{ fromJson(steps.output.outputs.tf_actions_output).import_function_app_resource_group_name.value }}
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: terraform
          path: ./infrastructure
      - name: 'Terragrunt init'
        uses: the-commons-project/terragrunt-github-actions@master
        with:
          tf_actions_version: ${{ env.tf_version }}
          tg_actions_version: ${{ env.tg_version }}
          tf_actions_binary: "terragrunt"
          tf_actions_subcommand: 'init'
          tf_actions_working_dir: './infrastructure/live/dev/import'
      - name: 'Terragrunt apply'
        uses: the-commons-project/terragrunt-github-actions@master
        with:
          tf_actions_version: ${{ env.tf_version }}
          tg_actions_version: ${{ env.tg_version }}
          tf_actions_binary: "terragrunt"
          tf_actions_subcommand: 'apply'
          tf_actions_working_dir: './infrastructure/live/dev/import'
      - name: 'Terragrunt output'
        id: output
        uses: the-commons-project/terragrunt-github-actions@master
        with:
          tf_actions_version: ${{ env.tf_version }}
          tg_actions_version: ${{ env.tg_version }}
          tf_actions_binary: "terragrunt"
          tf_actions_subcommand: 'output'
          tf_actions_working_dir: './infrastructure/live/dev/import'


  deploy_dev:
    name: Deploy Function App to develop
    needs: [ build, deploy_terraform_dev ]
    runs-on: ubuntu-latest
    environment: develop

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: import_function_app
          path: ./function_app

      - uses: Azure/login@v1
        with:
          creds: '{"clientId":"${{ secrets.ARM_CLIENT_ID }}","clientSecret":"${{ secrets.ARM_CLIENT_SECRET }}","subscriptionId":"${{ secrets.ARM_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.ARM_TENANT_ID }}"}'
      - name: Get Publish Profile
        run: |
          echo "PUBLISH_PROFILE=$(az webapp deployment list-publishing-profiles -g '${{ needs.deploy_terraform_dev.outputs.function_app_resource_group }}' -n '${{ needs.deploy_terraform_dev.outputs.function_app_name }}' --xml)" >> $GITHUB_OUTPUT
        id: getPublishProfile

      - name: 'Deploy Function App to Azure'
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: ${{ needs.deploy_terraform_dev.outputs.function_app_name  }}
          package: './function_app'
          publish-profile: ${{ steps.getPublishProfile.outputs.PUBLISH_PROFILE }}
